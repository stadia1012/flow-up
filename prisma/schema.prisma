generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model AUDIT_LOG {
  LOG_SEQ  Int     @id @default(autoincrement())
  LOG_CD   String? @db.VarChar(5)
  USER_ID  String? @db.VarChar(15)
  LOG_SYS  String? @db.VarChar(10)
  LOG_DT   String? @db.VarChar(30)
  LOG_TRGT String? @db.VarChar(30)
  CHG_VAL  String? @db.VarChar(30)
  ORGN_VAL String? @db.VarChar(30)
  LOG_CMNT String? @db.Text
  REMARKS  String? @db.VarChar(50)
}

model BASIS_ITEM {
  SEQ       Int     @id @default(autoincrement())
  ITEM_TYPE String? @db.VarChar(20)
  ITEM_CODE String? @db.VarChar(20)
  ITEM_NAME String? @db.VarChar(30)
  ITEM_VAL  String? @db.VarChar(100)
}

model CBT_LOG {
  LOG_SEQ  Int     @id @default(autoincrement())
  LOG_CD   String? @db.VarChar(5)
  USER_ID  String? @db.VarChar(15)
  LOG_SYS  String? @db.VarChar(10)
  LOG_DT   String? @db.VarChar(30)
  LOG_TRGT String? @db.VarChar(30)
  CHG_VAL  String? @db.VarChar(30)
  ORGN_VAL String? @db.VarChar(30)
  LOG_CMNT String? @db.Text
  REMARKS  String? @db.VarChar(50)
}

model CBT_USER {
  USER_ID        String  @id @db.VarChar(15)
  USER_NAME      String? @db.VarChar(8)
  USER_CORP      String? @db.VarChar(10)
  USER_DEPT_CODE String? @db.VarChar(8)
  USE_YN         String? @default("Y") @db.VarChar(3)
  DELETE_YN      String? @default("N") @db.VarChar(3)
  USER_PW        String? @db.VarChar(300)
  USER_MAIL      String? @db.VarChar(30)
  USER_RANK      String? @db.VarChar(8)
  USER_GRADE     String? @db.VarChar(3)
  ADMIN_GRADE    String? @db.VarChar(3)
  EVAL_ID1       String? @db.VarChar(15)
  EVAL_ID2       String? @db.VarChar(15)
  EVAL_ID3       String? @db.VarChar(15)
  CNF_PASS       String? @db.VarChar(3)
  MID_PASS       String? @default("N") @db.VarChar(2)
  FIN_PASS       String? @default("N") @db.VarChar(2)
  REG_DT         String? @db.VarChar(30)
  REGR           String? @default("SYSTEM") @db.VarChar(15)
  IS_FIRST_LOGIN String? @db.VarChar(3)
  LAST_LOGIN_DT  String? @db.VarChar(30)
  LOGIN_FAIL_CNT Int?    @default(0)
  LOCKED_YN      String? @default("N") @db.VarChar(1)
  TEST_YN        String? @default("N") @db.VarChar(3)

  userDept       CBT_USER_DEPT? @relation("UserToDept", fields: [USER_DEPT_CODE], references: [DEPT_CODE])
  userPermissions W_USER_PERMISSIONS[] @relation("CBTUserToPermissions")
  adminUser      W_ADMIN_USERS? @relation("CBTUserToAdmin")
}

model CBT_USER_AUTH {
  SEQ       Int     @id @default(autoincrement())
  USER_ID   String  @db.VarChar(15)
  RGNT_AUTH String? @db.VarChar(15)

  @@index([USER_ID], map: "USER_ID")
}

model CBT_USER_DEPT {
  DEPT_SEQ     Int     @id @default(autoincrement())
  DEPT_CODE    String  @unique @db.VarChar(8)
  DEPT_NAME    String? @db.VarChar(25)
  INITIAL_NAME String? @db.VarChar(10)
  CORP_INITIAL String? @db.VarChar(10)
  USE_YN       String? @default("Y") @db.VarChar(3)
  DEPT_TYPE    String? @db.VarChar(5)
  DIV_CODE     String? @db.VarChar(8)
  DIV_PATH     String? @db.VarChar(100)
  DEPT_REMARKS String? @db.Text
  TEST_YN      String? @default("N") @db.VarChar(3)
  REG_DT       String? @db.VarChar(30)
  REGR         String? @db.VarChar(15)
  ORDER_INDEX  String? @db.VarChar(3)

  users        CBT_USER[]  @relation("UserToDept")
  deptPermissions W_DEPT_PERMISSIONS[] @relation("CBTDeptToPermissions")
  closureAncestor CBT_DEPT_CLOSURE[] @relation("ClosureAncestor")
  closureDescendant CBT_DEPT_CLOSURE[] @relation("ClosureDescendant")
}

model CBT_USER_DEPT_BCK {
  DEPT_SEQ     Int     @id @default(autoincrement())
  DEPT_CODE    String  @unique @db.VarChar(8)
  DEPT_NAME    String? @db.VarChar(25)
  INITIAL_NAME String? @db.VarChar(10)
  CORP_INITIAL String? @db.VarChar(10)
  USE_YN       String? @default("Y") @db.VarChar(3)
  DEPT_TYPE    String? @db.VarChar(5)
  DIV_CODE     String? @db.VarChar(8)
  DIV_PATH     String? @db.VarChar(100)
  DEPT_REMARKS String? @db.Text
  TEST_YN      String? @db.VarChar(3)
  REG_DT       String? @db.VarChar(30)
  REGR         String? @db.VarChar(15)
  ORDER_INDEX  String? @db.VarChar(3)
}

model CBT_USER_RANK {
  SEQ         Int     @id @default(autoincrement())
  RANK_NAME   String? @db.VarChar(15)
  ORDER_INDEX String? @db.VarChar(3)
}


model MAIL_BLOCKED {
  SEQ      Int     @id @default(autoincrement())
  SYS_TYPE String? @db.VarChar(5)
  USER_ID  String? @db.VarChar(15)
}


model MAIL_NOTIFICATION {
  SEQ        Int     @id @default(autoincrement())
  SYS_TYPE   String? @db.VarChar(5)
  ITEM_NAME  String? @db.VarChar(15)
  ENABLED_YN String? @db.VarChar(2)
}


model MENU_PERMISSIONS {
  SEQ        Int     @id
  MENU_ID    String? @db.VarChar(25)
  MENU_NAME  String? @db.VarChar(20)
  USER_GRADE String? @db.VarChar(20)
  NON_ADMIN  String? @db.VarChar(2)
  BLOCK_MSG  String? @db.VarChar(60)
}


model CBT_USER_VRFC {
  SEQ      Int     @id @default(autoincrement())
  USER_ID  String? @db.VarChar(15)
  VRFC_CD  Int?
  VRFC_DT  String? @db.VarChar(30)
  FAIL_CNT Int
}


model KPI_ABLT_CONFIG {
  SEQ     Int     @id @default(autoincrement())
  ABLT_YR String? @db.VarChar(5)
  CORP_CD String? @db.VarChar(8)
  ABLT_TP String? @db.VarChar(5)
  REG_ID  String? @db.VarChar(15)
  REG_DT  String? @db.VarChar(30)
}


model KPI_ABLT_SCORE {
  SEQ        Int     @id @default(autoincrement())
  CONFIG_SEQ Int?
  TRGT_ID    String? @db.VarChar(15)
  ABLT_SCORE String? @db.VarChar(5)
}


model KPI_ATTACH {
  SEQ         Int     @id @default(autoincrement())
  DOC_TYPE    String? @db.VarChar(10)
  DOC_YEAR    String? @db.VarChar(5)
  DOC_SEQ     Int?
  ATTACH_FILE String? @db.VarChar(150)
}


model KPI_BD {
  SEQ        Int     @id @default(autoincrement())
  BD_TP      String? @db.VarChar(9)
  POST_TITLE String? @db.VarChar(100)
  POST_CONTS String? @db.Text
  CORP       String? @db.VarChar(5)
  DP_YN      String? @db.VarChar(3)
  NTC_YN     String? @db.VarChar(3)
  REG_ID     String? @db.VarChar(15)
  REG_DT     String? @db.VarChar(30)
  UPD_ID     String? @db.VarChar(15)
  UPD_DT     String? @db.VarChar(30)
}


model KPI_CLOSE {
  CL_YR   Int
  CL_TP   String @db.VarChar(5)
  CL_CORP String @db.VarChar(8)
  CL_ID   String @db.VarChar(15)

  @@id([CL_YR, CL_TP, CL_CORP, CL_ID])
}


model KPI_EDITOR {
  SEQ          Int     @id @default(autoincrement())
  DOC_TYPE     String? @db.VarChar(10)
  DOC_SEQ      Int?
  EDTR_CONTENT String? @db.Text
}


model KPI_FIN {
  FIN_SEQ     Int     @id @default(autoincrement())
  PLAN_SEQ    Int?
  REG_ID      String? @db.VarChar(15)
  FIN_YEAR    String? @db.VarChar(5)
  REG_DT      String? @db.VarChar(30)
  REG_YN      String? @db.VarChar(3)
  FIN_CNF_YN  String? @db.VarChar(3)
  FIN_CNF_DT  String? @db.VarChar(30)
  FIN_CNF_ID  String? @db.VarChar(15)
  FIN_CNF2_YN String? @db.VarChar(3)
  FIN_CNF2_DT String? @db.VarChar(30)
  FIN_CNF2_ID String? @db.VarChar(15)
  FIN_AC_YN   String? @db.VarChar(3)
  FIN_AC_DT   String? @db.VarChar(30)
  FIN_AC_ID   String? @db.VarChar(15)
  FIN_STATE   String? @db.VarChar(3)
  FIN_TITLE   String? @db.VarChar(100)
  SAVE_DT     String? @db.VarChar(30)
  DELETE_YN   String? @db.VarChar(3)
  DELETE_DT   String? @db.VarChar(30)
  REJECT_YN   String? @db.VarChar(3)
  REJECT_DT   String? @db.VarChar(30)
  REJECT_ID   String? @db.VarChar(15)
}


model KPI_FIN_ABILITY {
  SEQ       Int     @id @default(autoincrement())
  FIN_SEQ   Int?
  CNF_TYPE  String? @db.VarChar(10)
  ABLT_ROW1 String? @db.VarChar(6)
  ABLT_ROW2 String? @db.VarChar(6)
  ABLT_ROW3 String? @db.VarChar(6)
  ABLT_ROW4 String? @db.VarChar(6)
}


model KPI_FIN_COMMENT {
  SEQ            Int     @id @default(autoincrement())
  FIN_SEQ        Int?
  COMMENT_SUBMIT String? @db.Text
  COMMENT_CNF1   String? @db.Text
  COMMENT_CNF2   String? @db.Text
  COMMENT_AR     String? @db.Text
}


model KPI_FIN_RESULT {
  SEQ             Int     @id @default(autoincrement())
  FIN_SEQ         Int?
  INDIV_GRADE     String? @db.VarChar(2)
  DIV_GRADE       String? @db.VarChar(2)
  ADJUSTED_GRADE1 String? @db.VarChar(2)
  ADJUSTED_GRADE2 String? @db.VarChar(2)
  FINAL_GRADE     String? @db.VarChar(2)
  PRFM_CMNT       String? @db.Text
  ABTL_CMNT       String? @db.Text
  ADJUST_CMNT1    String? @db.Text
  ADJUST_CMNT2    String? @db.Text
  PRFM_RMRK       String? @db.Text
  ABTL_RMRK       String? @db.Text
  ADJUST_RMRK1    String? @db.Text
  ADJUST_RMRK2    String? @db.Text
  RSLT_RMRK       String? @db.VarChar(27)
  NAME_TXT        String? @db.VarChar(10)
  RANK_TXT        String? @db.VarChar(15)
  DEPT_TXT        String? @db.VarChar(25)
  DIV_TXT         String? @db.VarChar(25)
}


model KPI_FIN_ROWS {
  ROWS_SEQ         Int     @id @default(autoincrement())
  FIN_SEQ          Int?
  ROWS_TYPE        String? @db.VarChar(5)
  ROWS_NUM         String? @db.VarChar(3)
  CONTS_PERFORM    String? @db.Text
  CONTS_SELF_GRADE String? @db.VarChar(2)
  CONTS_SELF_SCORE String? @db.VarChar(5)
  CONTS_CNF_GRADE  String? @db.VarChar(2)
  CONTS_CNF_SCORE  String? @db.VarChar(5)
  CONTS_CNF_OP     String? @db.Text
  CONTS_CNF2_GRADE String? @db.VarChar(2)
  CONTS_CNF2_SCORE String? @db.VarChar(5)
  CONTS_CNF2_OP    String? @db.Text
}


model KPI_FIN_STATE {
  SEQ           Int     @id @default(autoincrement())
  USER_ID       String? @db.VarChar(15)
  FIN_YEAR      String? @db.VarChar(5)
  FIN_SEQ       Int?
  FIN_STATE     String? @db.VarChar(3)
  PLAN_SEQ      Int?
  LAST_ACT_USER String? @db.VarChar(15)
}


model KPI_MID {
  MID_SEQ     Int     @id @default(autoincrement())
  PLAN_SEQ    Int?
  REG_ID      String? @db.VarChar(15)
  MID_YEAR    String? @db.VarChar(5)
  REG_DT      String? @db.VarChar(30)
  REG_YN      String? @db.VarChar(3)
  MID_CNF_YN  String? @db.VarChar(3)
  MID_CNF_DT  String? @db.VarChar(30)
  MID_CNF_ID  String? @db.VarChar(15)
  MID_CNF2_YN String? @db.VarChar(3)
  MID_CNF2_DT String? @db.VarChar(30)
  MID_CNF2_ID String? @db.VarChar(15)
  MID_CNF3_YN String? @db.VarChar(3)
  MID_CNF3_DT String? @db.VarChar(30)
  MID_CNF3_ID String? @db.VarChar(15)
  MID_STATE   String? @db.VarChar(3)
  MID_TITLE   String? @db.VarChar(100)
  SAVE_DT     String? @db.VarChar(30)
  DELETE_YN   String? @db.VarChar(3)
  DELETE_DT   String? @db.VarChar(30)
  REJECT_YN   String? @db.VarChar(3)
  REJECT_DT   String? @db.VarChar(30)
  REJECT_ID   String? @db.VarChar(15)
}


model KPI_MID_ABILITY {
  SEQ       Int     @id @default(autoincrement())
  MID_SEQ   Int?
  CNF_TYPE  String? @db.VarChar(10)
  ABLT_ROW1 String? @db.VarChar(6)
  ABLT_ROW2 String? @db.VarChar(6)
  ABLT_ROW3 String? @db.VarChar(6)
  ABLT_ROW4 String? @db.VarChar(6)
}


model KPI_MID_COMMENT {
  SEQ            Int     @id @default(autoincrement())
  MID_SEQ        Int?
  COMMENT_SUBMIT String? @db.Text
  COMMENT_CNF1   String? @db.Text
  COMMENT_CNF2   String? @db.Text
  COMMENT_AR     String? @db.Text
}


model KPI_MID_ROWS {
  ROWS_SEQ         Int     @id @default(autoincrement())
  MID_SEQ          Int?
  ROWS_TYPE        String? @db.VarChar(7)
  ROWS_NUM         String? @db.VarChar(3)
  CONTS_PERFORM    String? @db.Text
  CONTS_PLAN       String? @db.Text
  CONTS_PROG       String? @db.VarChar(4)
  CONTS_SELF_GRADE String? @db.VarChar(2)
  CONTS_CNF_GRADE  String? @db.VarChar(2)
  CONTS_CNF_OP     String? @db.Text
  CONTS_CNF2_GRADE String? @db.VarChar(2)
  CONTS_CNF2_OP    String? @db.Text
}


model KPI_MID_STATE {
  SEQ           Int     @id @default(autoincrement())
  USER_ID       String? @db.VarChar(15)
  MID_YEAR      String? @db.VarChar(5)
  MID_SEQ       Int?
  MID_STATE     String? @db.VarChar(3)
  PLAN_SEQ      Int?
  LAST_ACT_USER String? @db.VarChar(15)
}


model KPI_PLAN {
  PLAN_SEQ     Int     @id
  REG_ID       String  @db.VarChar(15)
  PLAN_YEAR    String? @db.VarChar(5)
  REG_DT       String? @db.VarChar(30)
  REG_YN       String  @db.VarChar(3)
  PLAN_CNF_YN  String  @db.VarChar(3)
  PLAN_CNF_DT  String? @db.VarChar(30)
  PLAN_CNF_ID  String? @db.VarChar(15)
  PLAN_CNF2_YN String? @db.VarChar(3)
  PLAN_CNF2_DT String? @db.VarChar(30)
  PLAN_CNF2_ID String? @db.VarChar(15)
  PLAN_CNF3_YN String? @db.VarChar(3)
  PLAN_CNF3_DT String? @db.VarChar(30)
  PLAN_CNF3_ID String? @db.VarChar(15)
  PLAN_STATE   String  @db.VarChar(5)
  PLAN_VER     String  @db.VarChar(5)
  PLAN_TITLE   String  @db.VarChar(100)
  SAVE_DT      String? @db.VarChar(30)
  DELETE_YN    String? @default("N") @db.VarChar(3)
  DELETE_DT    String? @db.VarChar(30)
  REJECT_YN    String? @db.VarChar(3)
  REJECT_DT    String? @db.VarChar(30)
  REJECT_ID    String? @db.VarChar(15)
  USE_YN       String? @db.VarChar(3)
  CHG_YN       String? @db.VarChar(1)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.

model KPI_PLAN_COMMENT {
  PLAN_SEQ       Int
  COMMENT_SUBMIT String? @db.Text
  COMMENT_CNF1   String? @db.Text
  COMMENT_CNF2   String? @db.Text
  COMMENT_CNF3   String? @db.Text
  COMMENT_AR     String? @db.Text

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.

model KPI_PLAN_M_DESC {
  PLAN_SEQ Int
  MTD_NUM  String  @db.VarChar(3)
  DESCRIPT String? @db.Text

  @@ignore
}


model KPI_PLAN_ROWS {
  ROWS_SEQ        Int     @id
  PLAN_SEQ        Int
  ROWS_TYPE       String  @db.VarChar(5)
  ROWS_NUM        String  @db.VarChar(3)
  CONTS_TARGET    String  @db.VarChar(200)
  CONTS_DETAIL    String  @db.Text
  CONTS_ACTPLAN   String  @db.Text
  CONTS_INDICATOR String  @db.Text
  CONTS_FORMULA   String  @db.Text
  CONTS_SCORE     String  @db.VarChar(6)
  CONTS_REMARKS   String? @db.Text
  CONTS_MONTH     String? @db.VarChar(13)

  @@index([PLAN_SEQ], map: "PLAN_SEQ")
}


model KPI_PLAN_STATE {
  SEQ           Int     @id @default(autoincrement())
  USER_ID       String? @db.VarChar(15)
  PLAN_YEAR     String? @db.VarChar(5)
  PLAN_SEQ      Int?
  PLAN_STATE    String? @db.VarChar(5)
  LAST_ACT_USER String? @db.VarChar(15)
  CHG_YN        String? @db.VarChar(1)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.

model KPI_PRFM_CHG {
  SEQ        Int?
  CONFIG_SEQ Int?
  CHG_ID     String? @db.VarChar(15)

  @@ignore
}


model KPI_PRFM_CONFIG {
  SEQ          Int     @id @default(autoincrement())
  PRFM_YR      String? @db.VarChar(5)
  CORP_INITIAL String? @db.VarChar(8)
  REG_ID       String? @db.VarChar(15)
  REG_DT       String? @db.VarChar(30)
  TOTAL_SCORE  Int?
}


model KPI_RESULT_HARD {
  SEQ             Int     @id @default(autoincrement())
  RSLT_YR         String? @db.VarChar(5)
  RSLT_TP         String? @db.VarChar(5)
  TRGT_ID         String? @db.VarChar(15)
  ADJUSTED_GRADE2 String? @db.VarChar(2)
  FINAL_GRADE     String? @db.VarChar(2)
  RSLT_RMRK       String? @db.VarChar(27)
  NAME_TXT        String? @db.VarChar(10)
  RANK_TXT        String? @db.VarChar(15)
  DEPT_TXT        String? @db.VarChar(25)
  DIV_TXT         String? @db.VarChar(25)
}


model KPI_RESULT_REWARD {
  SEQ      Int     @id @default(autoincrement())
  RSLT_YR  String? @db.VarChar(5)
  RSLT_TP  String? @db.VarChar(5)
  TRGT_ID  String? @db.VarChar(15)
  TP_01_YN String? @db.VarChar(2)
  TP_02_YN String? @db.VarChar(2)
  TP_03_YN String? @db.VarChar(2)
  TP_04_YN String? @db.VarChar(2)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.

model KPI_TEST {
  TEST_VARCHAR  String? @db.VarChar(20)
  TEST_TEXT     String? @db.Text
  TEST_INT      Int?
  TEST_SEQ      Int?
  TEST_VARCHAR2 String? @db.VarChar(20)

  @@ignore
}


model KPI_USER_EXT {
  EXT_SEQ   Int     @id @default(autoincrement())
  USER_ID   String  @db.VarChar(15)
  USER_RMRK String? @db.VarChar(300)
  PLAN_CHG  String? @db.VarChar(2)
}


model RGNT_IN_OUT {
  SEQ        Int     @id @default(autoincrement())
  ORDER_CD   String? @db.VarChar(15)
  RGNT_CD    String? @db.VarChar(15)
  ORDER_DT   String? @db.VarChar(30)
  ORDER_TYPE String? @default("in") @db.VarChar(10)
  AMT        Int?
  AMT_IN_USE Int?
  REG_ID     String? @db.VarChar(15)
  REG_DT     String? @db.VarChar(30)
  REMARK     String? @db.VarChar(100)
}


model RGNT_INFO {
  SEQ            Int     @id @default(autoincrement())
  RGNT_CD        String? @db.VarChar(15)
  REG_ID         String? @db.VarChar(15)
  REG_DT         String? @db.VarChar(30)
  APRV_ST        String? @db.VarChar(10)
  APRV_DT        String? @db.VarChar(30)
  APRV_ID        String? @db.VarChar(15)
  DEL_YN         String? @db.VarChar(3)
  DEL_DT         String? @db.VarChar(30)
  INCOMING_DT    String? @db.VarChar(30)
  MANAGER_ID     String? @db.VarChar(15)
  CATEGORY_CD    Int?
  NM_EN          String? @db.VarChar(100)
  NM_KO          String? @db.VarChar(100)
  MANUFACTURER   String? @db.VarChar(100)
  CAS_NO         String? @db.VarChar(100)
  CATALOG_NO     String? @db.VarChar(100)
  PACKAGING_UNIT String? @db.VarChar(20)
  TEMP_AMT       String? @db.VarChar(12)
  LAST_USER      String? @db.VarChar(15)
  SAFETY_STOCK   String? @db.VarChar(12)
  IS_AMT_ZERO    String? @default("N") @db.VarChar(2)
  BATCH_NO       String? @db.VarChar(100)
  EXPIRY_DT      String? @db.VarChar(30)
  COND           String? @db.VarChar(50)
  WRHS_CD        String? @db.VarChar(50)
  WRHS_DETAIL    String? @db.VarChar(50)
  USE_DEPT_CD    String? @db.VarChar(50)
  URL_ADDR       String? @db.VarChar(200)
  REMARK         String? @db.Text
}

model RGNT_CATEGORY {
  CATEGORY_CD Int @id @default(autoincrement())
  CATEGORY_NM String? @db.VarChar(30)
}

model SMTP_CONFIG {
  SEQ       Int     @id @default(autoincrement())
  SYS_TYPE  String? @db.VarChar(5)
  SMTP_HOST String? @db.VarChar(50)
  SMTP_PORT Int?
  SMTP_ID   String? @db.VarChar(35)
  SMTP_PW   String? @db.VarChar(20)
  SMTP_NAME String? @db.VarChar(15)
}

model W_PROJECTS {
  ID      Int        @id @default(autoincrement())
  NAME    String?    @db.VarChar(50)
  ICON_COLOR String? @db.VarChar(6) 
  ORDER   Int?
  IS_DELETED String @default("N") @db.VarChar(1)
  FOLDERS_VERSION Int?
  REG_ID  String?    @db.VarChar(15)
  REG_DT  DateTime?  @db.DateTime(0)
  UPDT_ID String?    @db.VarChar(15)
  UPDT_DT DateTime?  @db.DateTime(0)
  
  folders  W_FOLDERS[]
}

model W_FOLDERS {
  ID         Int       @id @default(autoincrement())
  PARENT_ID  Int?
  NAME       String?   @db.VarChar(50)
  ICON_COLOR String? @db.VarChar(6) 
  ORDER      Int?
  IS_DELETED String @default("N") @db.VarChar(1)  
  ITEMS_VERSION Int?
  REG_ID     String?   @db.VarChar(15)
  REG_DT     DateTime? @db.DateTime(0)
  UPDT_ID    String?   @db.VarChar(15)
  UPDT_DT    DateTime? @db.DateTime(0)

  project   W_PROJECTS? @relation(fields: [PARENT_ID], references: [ID])
  items     W_ITEMS[]
}

model W_ITEMS {
  ID        Int       @id @default(autoincrement())
  PARENT_ID Int?
  NAME      String?   @db.VarChar(50)
  ICON_COLOR String? @db.VarChar(6) 
  ORDER     Int?
  IS_DELETED String @default("N") @db.VarChar(1)
  ROWS_VERSION Int?
  FIELDS_VERSION Int?
  REG_ID    String?   @db.VarChar(15)
  REG_DT    DateTime? @db.DateTime(0)
  UPDT_ID   String?   @db.VarChar(15)
  UPDT_DT   DateTime? @db.DateTime(0)

  folder   W_FOLDERS? @relation(fields: [PARENT_ID], references: [ID])
  fields   W_FIELDS[] @relation("ItemFields")
  rows     W_ROWS[]   @relation("ItemRows")
}

model W_FIELDS {
  ID            Int       @id @default(autoincrement())
  ITEM_ID       Int?
  FIELD_TYPE_ID Int
  ORDER         Int?
  WIDTH         Int?
  IS_HIDDEN     String @default("N") @db.VarChar(1)
  REG_ID        String?   @db.VarChar(15)
  REG_DT        DateTime?
  UPDT_ID       String?   @db.VarChar(15)
  UPDT_DT       DateTime?

  values     W_VALUES[] @relation("FieldValues")
  fieldType  W_FIELD_TYPES   @relation("FieldType", fields: [FIELD_TYPE_ID], references: [ID])
  @@unique([ITEM_ID, FIELD_TYPE_ID], name: "unique_item_fieldType")
  item       W_ITEMS?        @relation("ItemFields", fields: [ITEM_ID], references: [ID])
}

model W_FIELD_TYPES {
  ID         Int       @id @default(autoincrement())
  NAME       String?   @db.VarChar(50)
  DATA_TYPE  String?   @db.VarChar(15) @default("text")
  IS_DELETED String @default("N") @db.VarChar(1)
  OPTIONS_VERSION Int?
  IS_PERMIT_ALL String? @db.VarChar(1) @default("N")
  REG_ID     String?   @db.VarChar(15)
  REG_DT     DateTime?
  UPDT_ID    String?   @db.VarChar(15)
  UPDT_DT    DateTime?

  fields     W_FIELDS[]   @relation("FieldType")
  dropdownOptions W_DROPDOWN_OPTIONS[] @relation("DropdownType")

  userPermissions   W_USER_PERMISSIONS[]   @relation("FieldTypeUserPermissions")
  deptPermissions   W_DEPT_PERMISSIONS[]   @relation("FieldTypeDeptPermissions")
}

model W_DROPDOWN_OPTIONS {
  ID            Int       @id @default(autoincrement())
  FIELD_TYPE_ID Int
  ORDER         Int?
  COLOR         String?   @db.VarChar(6)
  NAME          String?   @db.VarChar(50)
  REG_ID        String?   @db.VarChar(15)
  REG_DT        DateTime?
  UPDT_ID       String?   @db.VarChar(15)
  UPDT_DT       DateTime?

  fieldType W_FIELD_TYPES @relation("DropdownType", fields: [FIELD_TYPE_ID], references: [ID])
}

model W_ROWS {
  ID         Int       @id @default(autoincrement())
  ITEM_ID    Int?
  PARENT_ID  Int? // 상위 row id
  LEVEL      Int? @default(0)
  ORDER      Int?
  IS_DELETED String @default("N") @db.VarChar(1)
  REG_ID     String?   @db.VarChar(15)
  REG_DT     DateTime?
  UPDT_ID    String?   @db.VarChar(15)
  UPDT_DT    DateTime?

  values     W_VALUES[] @relation("RowValues")
  item       W_ITEMS?   @relation("ItemRows", fields: [ITEM_ID], references: [ID])

  // 자기참조 관계
  parent     W_ROWS? @relation("RowHierarchy", fields: [PARENT_ID], references: [ID], onDelete: NoAction, onUpdate: NoAction)
  children   W_ROWS[]   @relation("RowHierarchy")

  @@index([PARENT_ID])
  @@index([ITEM_ID, PARENT_ID])
}

model W_VALUES {
  ID         Int       @id @default(autoincrement())
  ROW_ID     Int?
  FIELD_ID   Int?
  VALUE      String?   @db.Text
  REG_ID     String?   @db.VarChar(15)
  REG_DT     DateTime?
  UPDT_ID    String?   @db.VarChar(15)
  UPDT_DT    DateTime?

  row        W_ROWS?   @relation("RowValues", fields: [ROW_ID], references: [ID])
  field      W_FIELDS? @relation("FieldValues", fields: [FIELD_ID], references: [ID])
  @@unique([ROW_ID, FIELD_ID], name: "unique_row_field")
}

model W_USER_LOGS {
  ID        Int       @id @default(autoincrement())
  USER_ID   String?   @db.VarChar(15)
  ITEM_TYPE String?   @db.VarChar(8)
  ITEM_ID    Int?
  ACTION     String?   @db.VarChar(20)
  REG_DT     DateTime? @db.DateTime(0)
}

// model W_GROUPS {
//   ID      Int       @id @default(autoincrement())
//   NAME    String?   @db.VarChar(15)
//   REG_ID  String?   @db.VarChar(15)
//   REG_DT  DateTime?
//   userGroups W_USER_GROUPS[]
//   permissions W_GROUP_PERMISSIONS[]
// }

// model W_USER_GROUPS {
//   USER_ID  String @db.VarChar(15)
//   GROUP_ID Int
//   group    W_GROUPS   @relation(fields: [GROUP_ID],  references: [ID])
//   REG_ID  String?   @db.VarChar(15)
//   REG_DT  DateTime?

//   @@id([USER_ID, GROUP_ID])
// }

// model W_GROUP_PERMISSIONS {
//   GROUP_ID Int
//   group    W_GROUPS   @relation(fields: [GROUP_ID],  references: [ID])
//   RESOURCE_ID Int
//   RESOURCE_TYPE String @db.VarChar(20) // project, folder, item, field
//   REG_ID  String?   @db.VarChar(15)
//   REG_DT  DateTime?

//   @@id([RESOURCE_TYPE, RESOURCE_ID, GROUP_ID])
// }

model W_USER_PERMISSIONS {
  USER_ID String @db.VarChar(15)
  user     CBT_USER   @relation("CBTUserToPermissions", fields: [USER_ID],  references: [USER_ID])
  RESOURCE_ID Int
  RESOURCE_TYPE String @db.VarChar(20) // project, folder, item, field
  REG_ID  String?   @db.VarChar(15)
  REG_DT  DateTime?

  fieldType       W_FIELD_TYPES? @relation("FieldTypeUserPermissions", fields: [RESOURCE_ID], references: [ID])

  @@id([RESOURCE_TYPE, RESOURCE_ID, USER_ID])
}

model W_DEPT_PERMISSIONS {
  DEPT_CODE String @db.VarChar(8)
  dept     CBT_USER_DEPT   @relation("CBTDeptToPermissions", fields: [DEPT_CODE],  references: [DEPT_CODE])
  RESOURCE_ID Int
  RESOURCE_TYPE String @db.VarChar(20) // project, folder, item, field
  REG_ID  String?   @db.VarChar(15)
  REG_DT  DateTime?

  fieldType       W_FIELD_TYPES? @relation("FieldTypeDeptPermissions", fields: [RESOURCE_ID], references: [ID])

  @@id([RESOURCE_TYPE, RESOURCE_ID, DEPT_CODE])
}

model W_ADMIN_USERS {
  USER_ID String @id  @db.VarChar(15)
  user     CBT_USER   @relation("CBTUserToAdmin", fields: [USER_ID],  references: [USER_ID])
  IS_ACTIVE String @default("Y") @db.VarChar(1)
  REG_ID  String?   @db.VarChar(15)
  REG_DT  DateTime?
}

model CBT_DEPT_CLOSURE {
  ANCESTOR_SEQ Int
  ancestor CBT_USER_DEPT @relation("ClosureAncestor", fields: [ANCESTOR_SEQ], references: [DEPT_SEQ])
  DESCENDANT_SEQ Int
  descendant CBT_USER_DEPT @relation("ClosureDescendant", fields: [DESCENDANT_SEQ], references: [DEPT_SEQ])
  DEPTH Int
  @@id([ANCESTOR_SEQ, DESCENDANT_SEQ])
}